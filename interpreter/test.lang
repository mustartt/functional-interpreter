load lang/higher-order.lang;

# quicksort(pred lst) performs quicksort on lst with pred
# quicksort: (X X -> Bool) (listof X) -> (listof X)
bind quicksort to lambda({pred lst} -> 
	if(empty?(lst) 
		list() 
		local(
			bind(pivot to car(lst))
			bind(less  to filter(lambda({x} -> pred(x pivot)) cdr(lst)))
			bind(great to filter(lambda({x} -> not(pred(x pivot))) cdr(lst))) 
				append(
					append(
						quicksort(pred less)
						list(pivot))
					quicksort(pred great)))));



# list-ref(lst index) get the lst element at index
# list-ref: (listof X) Nat -> X
# require: index < length(lst)
bind list-ref to lambda({lst index} -> 
	if(zero?(index)
		car(lst)
		list-ref(cdr(lst) -(index 1)))); 



# len(lst) get the length of the lst
# len: (listof Any) -> Nat
bind len to lambda({lst} -> 
	if(empty?(lst) 
		0
		+(1 len(cdr(lst)))));